{"ast":null,"code":"import _slicedToArray from \"/Users/jovangoh/Desktop/tetris-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jovangoh/Desktop/tetris-react/src/components/Tetris/Tetris.js\";\nimport React, { useState } from \"react\";\nimport { createStage } from \"../../gameHelpers\"; // create clean state\n\nimport Stage from \"../Stage/Stage\";\nimport Display from \"../Display/Display\";\nimport StartButton from \"../StartButton/StartButton\";\nimport { usePlayer } from \"../../hooks/usePlayer\";\nimport { useStage } from \"../../hooks/useStage\";\nimport classes from \"./Tetris.module.css\";\n\nconst Tetris = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropTime = _useState2[0],\n        setDropTime = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameOver = _useState4[0],\n        setGameOver = _useState4[1];\n\n  const _usePlayer = usePlayer(),\n        _usePlayer2 = _slicedToArray(_usePlayer, 1),\n        player = _usePlayer2[0];\n\n  const _useStage = useStage(player),\n        _useStage2 = _slicedToArray(_useStage, 2),\n        stage = _useStage2[0],\n        setStage = _useStage2[1];\n\n  console.log(\"re-render\");\n\n  const movePlayer = direction => {};\n\n  const startGame = () => {};\n\n  const drop = () => {};\n\n  const dropPlayer = () => {};\n\n  const move = ({\n    keyCode\n  }) => {\n    console.log(keyCode);\n\n    if (!gameOver) {\n      if (keyCode) {}\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.TetrisWrapper,\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.Tetris,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    stage: stage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), \" \", React.createElement(\"aside\", {\n    className: classes.Sidebar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, gameOver ? React.createElement(Display, {\n    gameOver: gameOver,\n    text: \"Game Over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Display, {\n    text: \"Score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Rows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Display, {\n    text: \"Level\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(StartButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))));\n};\n\nexport default Tetris;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/tetris-react/src/components/Tetris/Tetris.js"],"names":["React","useState","createStage","Stage","Display","StartButton","usePlayer","useStage","classes","Tetris","props","dropTime","setDropTime","gameOver","setGameOver","player","stage","setStage","console","log","movePlayer","direction","startGame","drop","dropPlayer","move","keyCode","TetrisWrapper","e","Sidebar"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,mBAA5B,C,CAAiD;;AAEjD,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA,oBACQT,QAAQ,CAAC,IAAD,CADhB;AAAA;AAAA,QACjBU,QADiB;AAAA,QACPC,WADO;;AAAA,qBAEQX,QAAQ,CAAC,KAAD,CAFhB;AAAA;AAAA,QAEjBY,QAFiB;AAAA,QAEPC,WAFO;;AAAA,qBAIPR,SAAS,EAJF;AAAA;AAAA,QAIjBS,MAJiB;;AAAA,oBAKER,QAAQ,CAACQ,MAAD,CALV;AAAA;AAAA,QAKjBC,KALiB;AAAA,QAKVC,QALU;;AAOxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AAEA,QAAMC,UAAU,GAAIC,SAAD,IAAe,CAAE,CAApC;;AACA,QAAMC,SAAS,GAAG,MAAM,CAAE,CAA1B;;AACA,QAAMC,IAAI,GAAG,MAAM,CAAE,CAArB;;AACA,QAAMC,UAAU,GAAG,MAAM,CAAE,CAA3B;;AACA,QAAMC,IAAI,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AAC5BR,IAAAA,OAAO,CAACC,GAAR,CAAYO,OAAZ;;AACA,QAAI,CAACb,QAAL,EAAe;AACb,UAAIa,OAAJ,EAAa,CACZ;AACF;AACF,GAND;;AAQA,SACE;AACE,IAAA,SAAS,EAAElB,OAAO,CAACmB,aADrB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAC,GAHX;AAIE,IAAA,SAAS,EAAGC,CAAD,IAAOH,IAAI,CAACG,CAAD,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAEpB,OAAO,CAACC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEO,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OAEE;AAAO,IAAA,SAAS,EAAER,OAAO,CAACqB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,QAAQ,GACP,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEA,QAAnB;AAA6B,IAAA,IAAI,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJJ,EAUE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAFF,CANF,CADF;AAwBD,CA7CD;;AA+CA,eAAeJ,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { createStage } from \"../../gameHelpers\"; // create clean state\n\nimport Stage from \"../Stage/Stage\";\nimport Display from \"../Display/Display\";\nimport StartButton from \"../StartButton/StartButton\";\n\nimport { usePlayer } from \"../../hooks/usePlayer\";\nimport { useStage } from \"../../hooks/useStage\";\n\nimport classes from \"./Tetris.module.css\";\n\nconst Tetris = (props) => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player] = usePlayer();\n  const [stage, setStage] = useStage(player);\n\n  console.log(\"re-render\");\n\n  const movePlayer = (direction) => {};\n  const startGame = () => {};\n  const drop = () => {};\n  const dropPlayer = () => {};\n  const move = ({ keyCode }) => {\n    console.log(keyCode);\n    if (!gameOver) {\n      if (keyCode) {\n      }\n    }\n  };\n\n  return (\n    <div\n      className={classes.TetrisWrapper}\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(e) => move(e)}\n    >\n      <div className={classes.Tetris}>\n        <Stage stage={stage} /> {/*initially is createStage() */}\n        <aside className={classes.Sidebar}>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text=\"Score\" />\n              <Display text=\"Rows\" />\n              <Display text=\"Level\" />\n            </div>\n          )}\n          <StartButton />\n        </aside>\n      </div>\n    </div>\n  );\n};\n\nexport default Tetris;\n"]},"metadata":{},"sourceType":"module"}